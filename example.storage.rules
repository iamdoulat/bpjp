
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Profile Images:
    // Users can read all profile images.
    // Users can only write (upload/update/delete) their own profile image.
    match /profile-images/{userId}/{allPaths=**} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Campaign Images:
    // Allow public read for campaign images.
    // Only authenticated admins can write (upload/update/delete) campaign images.
    match /campaign_images/{allPaths=**} {
      allow read;
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Event Attachments:
    // Allow public read for event attachments.
    // Only authenticated admins can write (upload/update/delete) event attachments.
    match /event_attachments/{allPaths=**} {
      allow read;
      allow write: if request.auth != null &&
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Expense Attachments:
    // Users can read all expense attachments (if a public listing of expenses with attachments is ever implemented).
    // For writing:
    //   - Authenticated users (admins) can write attachments to any expense.
    //   - (Future consideration: If users could submit their own expenses, you might add a rule for users to write to their own expense paths)
    match /expense_attachments/{allPaths=**} {
      allow read; // Or more restrictive if needed, e.g., if request.auth != null;
      allow write: if request.auth != null &&
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Organization Settings Images (President, Secretary, Cover):
    // Allow public read.
    // Only authenticated admins can write.
    match /organization/{settingsDocId}/{imageType}/{allPaths=**} {
      allow read;
      allow write: if request.auth != null &&
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }
     match /organization/{settingsDocId}/{imageFilename} {
      allow read;
      allow write: if request.auth != null &&
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }


    // Default deny all other paths if not explicitly allowed
    // match /{allPaths=**} {
    //   allow read, write: if false;
    // }
  }
}
