
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Profile images: Authenticated users can read/write their own.
    match /profile-images/{userId}/{allPaths=**} {
      allow read; // Allow public read if desired, or restrict to `if request.auth != null;`
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Campaign images: Authenticated users (admins for write) can manage.
    match /campaign_images/{allPaths=**} {
      allow read; // Public read for campaign images
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Event attachments: Authenticated users (admins for write) can manage.
    match /event_attachments/{allPaths=**} {
      allow read; // Public read for event attachments
      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Expense attachments: Authenticated users (admins for write) can manage.
    // Note: Expenses are often sensitive, so write access is typically admin-only.
    // Read access might also need to be restricted depending on requirements.
    match /expense_attachments/{allPaths=**} {
      allow read: if request.auth != null && 
                     get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin'; // Admins can read all
      // If users should read their own expense attachments, add:
      // allow read: if request.auth != null && resource.metadata.ownerUid == request.auth.uid; 
      // (Requires setting 'ownerUid' in metadata on upload)

      allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Organization settings images (president, secretary, cover): Admins can manage.
    match /organization/{settingsDocId}/{imageName} {
      allow read; // Publicly readable
      allow write: if request.auth != null &&
                      get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Default deny all other paths if not explicitly matched
    // match /{allPaths=**} {
    //   allow read, write: if false;
    // }
  }
}
