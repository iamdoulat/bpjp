
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Default deny all to enforce explicit permissions
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Profile images:
    // Users can write (upload/update/delete) their own profile picture.
    // Profile pictures are publicly readable.
    match /profile-images/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Campaign images:
    // Authenticated users can write (upload) campaign images.
    // Campaign images are publicly readable.
    match /campaign_images/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Organization setting images (president, secretary, cover images for About Us):
    // Authenticated users can write.
    // These images are publicly readable.
    // The path is typically `organization/{settingsDocId}/{imageType}.{extension}`
    // e.g., organization/organizationDetails/president_image.png
    match /organization/{settingsDocId}/{imageIdentifier} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Expense attachments:
    // Authenticated users can upload (write) and read their expense attachments.
    // The path used in `expenseService.ts` is `expense_attachments/{uniqueFileName}`.
    match /expense_attachments/{fileName} {
      allow read: if request.auth != null; // Only authenticated users can read
      allow write: if request.auth != null; // Only authenticated users can upload
    }
  }
}
