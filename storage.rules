
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if a user is an admin by looking up their profile in Firestore
    // This requires your Firestore rules to allow admins to read userProfiles
    function isAdmin() {
      return request.auth != null && get(/databases/(default)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Profile Images:
    // Users can read anyone's profile image (if public).
    // Users can only write (upload/update/delete) their own profile image.
    match /profile-images/{userId}/{allPaths=*} {
      allow read: if true; // Or restrict to authenticated users: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Campaign Images:
    // Publicly readable.
    // Writable by authenticated users (e.g., admins or users creating campaigns).
    // Adjust write rule based on who can create/edit campaigns.
    match /campaign_images/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(); // Only admins can upload/modify campaign images
    }

    // Event Attachments:
    // Publicly readable.
    // Writable by admin users.
    match /event_attachments/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }

    // Expense Attachments:
    // Readable by admin users (or potentially by the user who created the expense if needed).
    // Writable by admin users.
    match /expense_attachments/{allPaths=**} {
      allow read: if request.auth != null && isAdmin(); // Or more specific if users need to see their own.
      allow write: if request.auth != null && isAdmin();
    }

    // Organization Setting Images (e.g., president, secretary, cover images for About Us)
    // Path: organization/organizationDetails/{image_type_filename}
    match /organization/organizationDetails/{fileName} {
      allow read: if true; // Publicly readable
      allow write: if request.auth != null && isAdmin(); // Only admins can write/update these images
    }

    // Advisory Board Images:
    // Allow authenticated users (ideally admins) to upload.
    // Allow anyone to read.
    match /advisory_board_images/{memberImage=**} {
      allow read;
      allow write: if request.auth != null; // For development
      // For production, restrict to admins:
      allow write: if request.auth != null && isAdmin(); // Only admins can write/update these images
    }

    // Default deny all other paths if not explicitly matched
    // match /{allPaths=**} {
    //   allow read, write: if false;
    // }
  }
}

    