rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if a user is an admin by reading their Firestore profile
    function isAdmin() {
      return get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Default deny all reads and writes
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Allow read access on profile images for all users
    match /profile-images/{userId}/{fileName} {
      allow read: if true;
      // Allow write only if the user is updating their own profile picture
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow read access on campaign images for all users
    match /campaign_images/{fileName} {
      allow read: if true;
      // Allow write only for authenticated admins
      allow write: if request.auth != null && isAdmin();
    }
    
    // Allow read access on organization setting images for all users
    match /organization/{contentId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Advisory Board images
    match /advisory_board_images/{fileName} {
        allow read: if true;
        allow write: if request.auth != null && isAdmin();
    }
    
    // Expense attachments
    match /expense_attachments/{fileName} {
      // Allow read only for the user who created it or an admin
      // This requires storing the createdBy UID on the expense document, which is not done yet.
      // For now, let's restrict read/write to admins for simplicity and security.
      allow read, write: if request.auth != null && isAdmin();
    }
    
    // Event attachments
     match /event_attachments/{fileName} {
      allow read: if true; // Publicly readable
      allow write: if request.auth != null && isAdmin(); // Admin only write
    }
    
    // Election candidate images
    match /election_candidates/{position}/{fileName} {
        allow read: if true;
        allow write: if request.auth != null && isAdmin();
    }

    // Notice images
    match /notice_images/{fileName} {
      allow read: if true; // Publicly readable
      allow write: if request.auth != null && isAdmin(); // Admin only write
    }
  }
}
