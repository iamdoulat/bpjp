
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/userProfiles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for userProfiles collection
    match /userProfiles/{userId} {
      // Admins can read/write any profile
      // Users can read/write their own profile
      allow read, write: if isAdmin() || request.auth.uid == userId;
    }

    // Rules for campaigns collection
    match /campaigns/{campaignId} {
      // Anyone can read campaigns
      allow read: if true;
      // Only admins can create, update, delete campaigns
      allow write: if isAdmin();

      // Rules for campaign subcollections (likes, supports, etc.)
      match /{subcollection}/{docId} {
        // Authenticated users can create/delete their own reaction documents
        allow create, delete: if isAuthenticated() && request.auth.uid == docId;
        // Anyone can list reactions (for counts, etc.)
        allow list: if true;
        // No one can read individual reaction docs directly except the user who made it
        allow get: if isAuthenticated() && request.auth.uid == docId;
        // No updates allowed to reaction docs
        allow update: if false;
      }
    }
    
    // Rules for notices collection
    match /notices/{noticeId} {
        // Any authenticated user can read notices
        allow read: if isAuthenticated();
        // Only admins can create, update, or delete notices
        allow write: if isAdmin();
    }

    // Rules for paymentTransactions collection
    match /paymentTransactions/{transactionId} {
      // Admins can read all transactions
      // Users can only read their own transactions
      allow read: if isAdmin() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      // Authenticated users can create their own transactions
      allow create: if isAuthenticated() && request.data.userId == request.auth.uid;
      // Only admins can update (e.g., change status) or delete transactions
      allow update, delete: if isAdmin();
    }
    
    // Rules for siteContent collection (e.g., organization settings, mission)
    match /siteContent/{docId} {
      // Anyone can read site content
      allow read: if true;
      // Only admins can write to site content
      allow write: if isAdmin();

      // Rules for subcollections within siteContent (e.g., advisory board)
       match /{subcollection}/{memberId} {
        // Anyone can read
        allow read: if true;
        // Only admins can write
        allow write: if isAdmin();
      }
    }
    
    // Rules for expenses collection
    match /expenses/{expenseId} {
      // Authenticated users can read all expenses
      allow read: if isAuthenticated();
      // Only admins can write (create, update, delete) expenses
      allow write: if isAdmin();
    }
    
    // Rules for events and their subcollections
    match /events/{eventId} {
      // Anyone can read event details
      allow read: if true;
      // Only admins can create, update, or delete events
      allow create, update, delete: if isAdmin();
      
      // Rules for event registrations
      match /registrations/{userId} {
        // Only the user themselves can register (create their own doc)
        allow create: if isAuthenticated() && request.auth.uid == userId;
        // Admins and the user who registered can read the registration
        allow read: if isAdmin() || (isAuthenticated() && request.auth.uid == userId);
        // No one can list all registrations directly (protects user privacy)
        allow list: if isAdmin();
        // No updates or deletes to registrations by users
        allow update, delete: if isAdmin();
      }
    }

    // Rules for election data
    match /electionCandidates/{candidateId} {
        // Anyone can read candidate info
        allow read: if true;
        // Only admins can write candidate info
        allow write: if isAdmin();
    }
    
    match /electionControl/{docId} {
        // Anyone can read the control settings (to see if voting is open/closed)
        allow read: if true;
        // Only admins can change the settings
        allow write: if isAdmin();
    }
    
    match /electionVotes/{userId} {
        // A user can only access their own vote document
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
        // No one can list all votes
        allow list: if false;
    }
  }
}
