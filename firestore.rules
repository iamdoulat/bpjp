
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // User Profiles
    // Users can read and write their own profile.
    // Authenticated users (assumed admin for listing) can read all profiles.
    // Admins can update any profile.
    match /userProfiles/{userId} {
      allow read: if request.auth != null; // Allows logged-in users to read any profile (for admin user list)
      allow create: if request.auth.uid == userId; // User can create their own profile
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
      allow delete: if get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin'; // Only admins can delete profiles
    }

    // Campaigns
    // Anyone can read campaigns.
    // Authenticated users (intended for admins) can create, update, delete.
    match /campaigns/{campaignId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';

      // Campaign Reactions (Likes/Supports)
      // Authenticated users can create/delete their own reactions.
      match /likes/{userId} {
        allow read: if true; // Anyone can read like counts (implicitly through campaign document)
        allow create, delete: if request.auth != null && request.auth.uid == userId;
        allow update: if false; // Typically no updates, just create/delete
      }
      match /supports/{userId} {
        allow read: if true; // Anyone can read support counts
        allow create, delete: if request.auth != null && request.auth.uid == userId;
        allow update: if false;
      }
    }

    // Payment Transactions
    // Users can create their own transactions.
    // Users can read their own transactions.
    // Admins can read/update/delete all transactions.
    match /paymentTransactions/{transactionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin');
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Expenses
    // Only authenticated users (admins) can create, read, update, delete expenses.
    match /expenses/{expenseId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Site Content (for Mission and Organization Settings)
    // Anyone can read.
    // Admins can write.
    match /siteContent/{documentId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/userProfiles/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
